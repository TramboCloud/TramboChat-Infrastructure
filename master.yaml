Description: >

  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availabilty Zones. It deploys an Internet Gateway, with a default
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the private subnets.

  It then deploys a highly available ECS cluster using an AutoScaling Group, with
  ECS hosts distributed across multiple Availability Zones.

  Finally, it deploys an example ECS Service with a custom image and tag.

  Last Modified: 21nd September 2020
  Author: Carlos Rodriguez <carlos@trambo.cloud>

Parameters:
  Subdomain:
    Description: <subdomain>.training.trambo.cloud
    Type: String

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/trambo-cloudformation/infrastructure/vpc.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/trambo-cloudformation/infrastructure/security-groups.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/trambo-cloudformation/infrastructure/load-balancers.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/trambo-cloudformation/infrastructure/ecs-cluster.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: t2.large
        ClusterSize: 1
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets

  TramboService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/trambo-cloudformation/services/chat-service/service.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 0
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /*
        RedisHost: !GetAtt ElasticCache.Outputs.ClusterDNS

  PublicDnsRecord:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/trambo-cloudformation/infrastructure/route53.yaml
      Parameters:
        HostedZoneId: !GetAtt ALB.Outputs.CanonicalHostedZoneID
        HostedZoneName: training.trambo.cloud.
        RecordName: !Sub ${Subdomain}.training.trambo.cloud
        DNSTarget: !GetAtt ALB.Outputs.LoadBalancerUrl

  ElasticCache:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3.amazonaws.com/trambo-cloudformation/infrastructure/elasticache.yml
      TimeoutInMinutes: '60'
      Parameters:
        Environment: !Ref AWS::StackName
        AutoMinorVersionUpgrade: true
        ClusterName: !Ref AWS::StackName
        Engine: "redis"
        NodeCount: 1
        SubnetIds: !GetAtt VPC.Outputs.PrivateSubnets
        VpcCidr: !GetAtt VPC.Outputs.VpcCIDR
        VpcId: !GetAtt VPC.Outputs.VPC
